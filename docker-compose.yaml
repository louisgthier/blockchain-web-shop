version: '3.8'

services:
  frontend:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./frontend/www:/usr/share/nginx/html
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - frontend-net
    depends_on:
      - backend-shop
      - backend-payment

  backend-shop:
    build: ./backend-shop
    environment:
      PGUSER: user
      PGHOST: db-shop
      PGDATABASE: database_shop
      PGPASSWORD: password
      PGPORT: 5432
    ports:
      - "3000:3000"
    networks:
      - backend-shop-net
      - frontend-net
    depends_on:
      - db-shop

  backend-payment:
    build: ./backend-payment
    ports:
      - "3001:3001"
    networks:
      - backend-payment-net
      - frontend-net
    depends_on:
      - geth

  db-shop:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database_shop
    volumes:
      - db-shop-volume:/var/lib/postgresql/data
      - ./init-db-shop:/docker-entrypoint-initdb.d
    networks:
      - backend-shop-net

  # Setup a geth node for the payment backend blockchain. This is a private blockchain started with the genesis.json file.
  geth:
    image: ethereum/client-go
    volumes:
      - ./geth/start-geth.sh:/start-geth.sh
      - chaindata-volume:/root/.ethereum
      - ./geth/genesis.json:/root/genesis.json
    command: []
    entrypoint: ["/bin/sh", "/start-geth.sh"]
    ports:
      - "8545:8545"
    networks:
      - backend-payment-net
      


  

volumes:
  db-shop-volume:
  geth-volume:
  chaindata-volume:

networks:
  frontend-net:
  backend-shop-net:
  backend-payment-net:
